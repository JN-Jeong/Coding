"""
자리수가 1일 때 각 숫자들이 맨 뒷자리에 올 수 있는 개수는 1
자리수가 2일 때 각 숫자들이 맨 뒷자리에 올 수 있는 개수는 
- 맨 뒷자리가 0일 때 '10' : 1
- 맨 뒷자리가 1일 때 '21' : 1 ('01'은 세지 않음)
- 맨 뒷자리가 2일 때 '12', '32' : 2
- 맨 뒷자리가 3일 때 '23', '43' : 2
...
- 맨 뒷자리가 8일 때 '78', '98' : 2
- 맨 뒷자리가 9일 때 '89' : 1


뒷자리 수   0  1  2  3  4  5  6  7  8  9
자리수(1)   0  1  1  1  1  1  1  1  1  1
자리수(2)   1  1  2  2  2  2  2  2  2  1
자리수(3)   1  3  3  4  4  4  4  4  3  2
...

현재 자리수의 계단수는 이전 자리수의 대각선 계단수 값들의 합이 됨
0은 오른쪽 대각선만 존재
9는 왼쪽 대각선만 존재
1~8은 왼쪽 오른쪽 대각선의 합
"""

N = int(input())

dp = [[0] * 10 for _ in range(N+1)]
for i in range(1, 10):
    dp[1][i] = 1


for i in range(2, N+1):
    for j in range(10):
        if j == 0:
            dp[i][j] = dp[i-1][j+1]
        elif j == 9:
            dp[i][j] = dp[i-1][j-1]
        else:
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]
    
print(dp)

print(sum(dp[N]) % 1000000000)